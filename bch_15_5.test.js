
		try{
$(document).ready(function (){
	module("Bose-Chaudhuri-Hocquenghem");
	var _bch_15_5 = bch_15_5;
	test("New test",function(){
		try{
			var _ins = new _bch_15_5();
			ok( true, "New Instrance ok" );
		} catch(e) {
			failed( false, "New Failed" );
		}
	});
	test("Encode test",function(){
		var _ins = new _bch_15_5();
		equals( _ins.encode(0	),	parseInt('000000000000000',2),'encode	0	');
		equals( _ins.encode(1	),	parseInt('000010100110111',2),'encode	1	');
		equals( _ins.encode(2	),	parseInt('000101001101110',2),'encode	2	');
		equals( _ins.encode(3	),	parseInt('000111101011001',2),'encode	3	');
		equals( _ins.encode(4	),	parseInt('001000111101011',2),'encode	4	');
		equals( _ins.encode(5	),	parseInt('001010011011100',2),'encode	5	');
		equals( _ins.encode(6	),	parseInt('001101110000101',2),'encode	6	');
		equals( _ins.encode(7	),	parseInt('001111010110010',2),'encode	7	');
		equals( _ins.encode(8	),	parseInt('010001111010110',2),'encode	8	');
		equals( _ins.encode(9	),	parseInt('010011011100001',2),'encode	9	');
		equals( _ins.encode(10	),	parseInt('010100110111000',2),'encode	10	');
		equals( _ins.encode(11	),	parseInt('010110010001111',2),'encode	11	');
		equals( _ins.encode(12	),	parseInt('011001000111101',2),'encode	12	');
		equals( _ins.encode(13	),	parseInt('011011100001010',2),'encode	13	');
		equals( _ins.encode(14	),	parseInt('011100001010011',2),'encode	14	');
		equals( _ins.encode(15	),	parseInt('011110101100100',2),'encode	15	');
		equals( _ins.encode(16	),	parseInt('100001010011011',2),'encode	16	');
		equals( _ins.encode(17	),	parseInt('100011110101100',2),'encode	17	');
		equals( _ins.encode(18	),	parseInt('100100011110101',2),'encode	18	');
		equals( _ins.encode(19	),	parseInt('100110111000010',2),'encode	19	');
		equals( _ins.encode(20	),	parseInt('101001101110000',2),'encode	20	');
		equals( _ins.encode(21	),	parseInt('101011001000111',2),'encode	21	');
		equals( _ins.encode(22	),	parseInt('101100100011110',2),'encode	22	');
		equals( _ins.encode(23	),	parseInt('101110000101001',2),'encode	23	');
		equals( _ins.encode(24	),	parseInt('110000101001101',2),'encode	24	');
		equals( _ins.encode(25	),	parseInt('110010001111010',2),'encode	25	');
		equals( _ins.encode(26	),	parseInt('110101100100011',2),'encode	26	');
		equals( _ins.encode(27	),	parseInt('110111000010100',2),'encode	27	');
		equals( _ins.encode(28	),	parseInt('111000010100110',2),'encode	28	');
		equals( _ins.encode(29	),	parseInt('111010110010001',2),'encode	29	');
		equals( _ins.encode(30	),	parseInt('111101011001000',2),'encode	30	');
		equals( _ins.encode(31	),	parseInt('111111111111111',2),'encode	31	');
	});

	test("Decode test",function(){
		var _ins = new _bch_15_5();
		equals( _ins.decode(parseInt('000000000000000',2)),	0	,'decode	0	');
		equals( _ins.decode(parseInt('000010100110111',2)),	1	,'decode	1	');
		equals( _ins.decode(parseInt('000101001101110',2)),	2	,'decode	2	');
		equals( _ins.decode(parseInt('000111101011001',2)),	3	,'decode	3	');
		equals( _ins.decode(parseInt('001000111101011',2)),	4	,'decode	4	');
		equals( _ins.decode(parseInt('001010011011100',2)),	5	,'decode	5	');
		equals( _ins.decode(parseInt('001101110000101',2)),	6	,'decode	6	');
		equals( _ins.decode(parseInt('001111010110010',2)),	7	,'decode	7	');
		equals( _ins.decode(parseInt('010001111010110',2)),	8	,'decode	8	');
		equals( _ins.decode(parseInt('010011011100001',2)),	9	,'decode	9	');
		equals( _ins.decode(parseInt('010100110111000',2)),	10	,'decode	10	');
		equals( _ins.decode(parseInt('010110010001111',2)),	11	,'decode	11	');
		equals( _ins.decode(parseInt('011001000111101',2)),	12	,'decode	12	');
		equals( _ins.decode(parseInt('011011100001010',2)),	13	,'decode	13	');
		equals( _ins.decode(parseInt('011100001010011',2)),	14	,'decode	14	');
		equals( _ins.decode(parseInt('011110101100100',2)),	15	,'decode	15	');
		equals( _ins.decode(parseInt('100001010011011',2)),	16	,'decode	16	');
		equals( _ins.decode(parseInt('100011110101100',2)),	17	,'decode	17	');
		equals( _ins.decode(parseInt('100100011110101',2)),	18	,'decode	18	');
		equals( _ins.decode(parseInt('100110111000010',2)),	19	,'decode	19	');
		equals( _ins.decode(parseInt('101001101110000',2)),	20	,'decode	20	');
		equals( _ins.decode(parseInt('101011001000111',2)),	21	,'decode	21	');
		equals( _ins.decode(parseInt('101100100011110',2)),	22	,'decode	22	');
		equals( _ins.decode(parseInt('101110000101001',2)),	23	,'decode	23	');
		equals( _ins.decode(parseInt('110000101001101',2)),	24	,'decode	24	');
		equals( _ins.decode(parseInt('110010001111010',2)),	25	,'decode	25	');
		equals( _ins.decode(parseInt('110101100100011',2)),	26	,'decode	26	');
		equals( _ins.decode(parseInt('110111000010100',2)),	27	,'decode	27	');
		equals( _ins.decode(parseInt('111000010100110',2)),	28	,'decode	28	');
		equals( _ins.decode(parseInt('111010110010001',2)),	29	,'decode	29	');
		equals( _ins.decode(parseInt('111101011001000',2)),	30	,'decode	30	');
		equals( _ins.decode(parseInt('111111111111111',2)),	31	,'decode	31	');
	});
	test("Decode test Lost 1bit",function(){
		var _ins = new _bch_15_5();
		equals( _ins.decode(parseInt('00000000000000',2)),	0	,'decode	0	');
		equals( _ins.decode(parseInt('00010100110111',2)),	1	,'decode	1	');
		equals( _ins.decode(parseInt('00101001101110',2)),	2	,'decode	2	');
		equals( _ins.decode(parseInt('00111101011001',2)),	3	,'decode	3	');
		equals( _ins.decode(parseInt('01000111101011',2)),	4	,'decode	4	');
		equals( _ins.decode(parseInt('01010011011100',2)),	5	,'decode	5	');
		equals( _ins.decode(parseInt('01101110000101',2)),	6	,'decode	6	');
		equals( _ins.decode(parseInt('01111010110010',2)),	7	,'decode	7	');
		equals( _ins.decode(parseInt('10001111010110',2)),	8	,'decode	8	');
		equals( _ins.decode(parseInt('10011011100001',2)),	9	,'decode	9	');
		equals( _ins.decode(parseInt('10100110111000',2)),	10	,'decode	10	');
		equals( _ins.decode(parseInt('10110010001111',2)),	11	,'decode	11	');
		equals( _ins.decode(parseInt('11001000111101',2)),	12	,'decode	12	');
		equals( _ins.decode(parseInt('11011100001010',2)),	13	,'decode	13	');
		equals( _ins.decode(parseInt('11100001010011',2)),	14	,'decode	14	');
		equals( _ins.decode(parseInt('11110101100100',2)),	15	,'decode	15	');
		equals( _ins.decode(parseInt('00001010011011',2)),	16	,'decode	16	');
		equals( _ins.decode(parseInt('00011110101100',2)),	17	,'decode	17	');
		equals( _ins.decode(parseInt('00100011110101',2)),	18	,'decode	18	');
		equals( _ins.decode(parseInt('00110111000010',2)),	19	,'decode	19	');
		equals( _ins.decode(parseInt('01001101110000',2)),	20	,'decode	20	');
		equals( _ins.decode(parseInt('01011001000111',2)),	21	,'decode	21	');
		equals( _ins.decode(parseInt('01100100011110',2)),	22	,'decode	22	');
		equals( _ins.decode(parseInt('01110000101001',2)),	23	,'decode	23	');
		equals( _ins.decode(parseInt('10000101001101',2)),	24	,'decode	24	');
		equals( _ins.decode(parseInt('10010001111010',2)),	25	,'decode	25	');
		equals( _ins.decode(parseInt('10101100100011',2)),	26	,'decode	26	');
		equals( _ins.decode(parseInt('10111000010100',2)),	27	,'decode	27	');
		equals( _ins.decode(parseInt('11000010100110',2)),	28	,'decode	28	');
		equals( _ins.decode(parseInt('11010110010001',2)),	29	,'decode	29	');
		equals( _ins.decode(parseInt('11101011001000',2)),	30	,'decode	30	');
		equals( _ins.decode(parseInt('11111111111111',2)),	31	,'decode	31	');
	});
	test("Decode test Lose 1bit",function(){
		var _ins = new _bch_15_5();
		equals( _ins.decode(parseInt('000000000100000',2)),	0	,'decode	0	');
		equals( _ins.decode(parseInt('000010100010111',2)),	1	,'decode	1	');
		equals( _ins.decode(parseInt('000101001001110',2)),	2	,'decode	2	');
		equals( _ins.decode(parseInt('000111101111001',2)),	3	,'decode	3	');
		equals( _ins.decode(parseInt('001000111001011',2)),	4	,'decode	4	');
		equals( _ins.decode(parseInt('001010011111100',2)),	5	,'decode	5	');
		equals( _ins.decode(parseInt('001101110100101',2)),	6	,'decode	6	');
		equals( _ins.decode(parseInt('001111010010010',2)),	7	,'decode	7	');
		equals( _ins.decode(parseInt('010001111110110',2)),	8	,'decode	8	');
		equals( _ins.decode(parseInt('010011011000001',2)),	9	,'decode	9	');
		equals( _ins.decode(parseInt('010100110011000',2)),	10	,'decode	10	');
		equals( _ins.decode(parseInt('010110010101111',2)),	11	,'decode	11	');
		equals( _ins.decode(parseInt('011001000011101',2)),	12	,'decode	12	');
		equals( _ins.decode(parseInt('011011100101010',2)),	13	,'decode	13	');
		equals( _ins.decode(parseInt('011100001110011',2)),	14	,'decode	14	');
		equals( _ins.decode(parseInt('011110101000100',2)),	15	,'decode	15	');
		equals( _ins.decode(parseInt('100001010111011',2)),	16	,'decode	16	');
		equals( _ins.decode(parseInt('100011110001100',2)),	17	,'decode	17	');
		equals( _ins.decode(parseInt('100100011010101',2)),	18	,'decode	18	');
		equals( _ins.decode(parseInt('100110111100010',2)),	19	,'decode	19	');
		equals( _ins.decode(parseInt('101001101010000',2)),	20	,'decode	20	');
		equals( _ins.decode(parseInt('101011001100111',2)),	21	,'decode	21	');
		equals( _ins.decode(parseInt('101100100111110',2)),	22	,'decode	22	');
		equals( _ins.decode(parseInt('101110000001001',2)),	23	,'decode	23	');
		equals( _ins.decode(parseInt('110000101101101',2)),	24	,'decode	24	');
		equals( _ins.decode(parseInt('110010001011010',2)),	25	,'decode	25	');
		equals( _ins.decode(parseInt('110101100000011',2)),	26	,'decode	26	');
		equals( _ins.decode(parseInt('110111000110100',2)),	27	,'decode	27	');
		equals( _ins.decode(parseInt('111000010000110',2)),	28	,'decode	28	');
		equals( _ins.decode(parseInt('111010110110001',2)),	29	,'decode	29	');
		equals( _ins.decode(parseInt('111101011101000',2)),	30	,'decode	30	');
		equals( _ins.decode(parseInt('111111111011111',2)),	31	,'decode	31	');
	});
});
		} catch(e) {}
